import os
import subprocess

# Create kubernetes config
def set_up_kube_config():
    kube_cmd_dir = "mkdir ~/.kube"
    kube_cmd_dir_returned_value = os.system(kube_cmd_dir)
    print('kube_cmd_dir_returned_value:', kube_cmd_dir_returned_value)
    kube_cmd_config = "echo $KUBE_CONFIG_DATA | base64 -d > ~/.kube/config"
    kube_cmd_config_returned_value = os.system(kube_cmd_config)
    print('kube_cmd_config_returned_value:', kube_cmd_config_returned_value)
    if os.getenv('LOG') == 'DEBUG':
        kube_cmd_config_debug = "cat ~/.kube/config"
        cmd_pipe = subprocess.Popen(kube_cmd_config_debug, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        for kubectl_response_line in cmd_pipe.stdout.readlines():
            print('kubectl_response_line:', kubectl_response_line)

# Print kubernetes nodes
def get_kube_nodes():
    kube_cmd_nodes = "kubectl get nodes"
    cmd_pipe = subprocess.Popen(kube_cmd_nodes, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    for kubectl_response_line in cmd_pipe.stdout.readlines():
        print('kubectl_response_line:', kubectl_response_line)

# Check kubernetes Kind type function
def is_kube_yaml_valid(file_yaml):
    kind_types = ['Deployment', 'ConfigMap', 'Service', 'Secret']
    for yaml_key, yaml_value in file_yaml.items():
        print('yaml_key:', yaml_key)
        if "kind" in str(yaml_key).lower():
            print('Found Kind Key with yaml_value:', yaml_value)
            for kind_type in kind_types:
                print('kind_type:', kind_type)
                if kind_type.lower() == yaml_value.lower():
                    return True
      #if "kind" in key.lower():
      #  print('Kind key:', value)
    #for kind_type in kind_types:
    #    print('kind_type:', kind_type)

    return False

# Check if yaml path key exist
def get_kube_yaml_key(yaml_file, yaml_path):
#    yaml_path_array = yaml_path.split(".")
#    for yaml_file_key, yaml_file_value in yaml_file.items():
#        print('yaml_file_key:', yaml_file_key)
#        if yaml_path_array[0] in str(yaml_file_key).lower():
#            print('Found first key yaml_path_array[0]:', yaml_path_array[0])
#            current_yaml_file_value = yaml_file_value
    current_yaml_file_value = []
    for yaml_path_key in yaml_path.split("."):
        print('yaml_path_key:', yaml_path_key)
        if current_yaml_file_value:
            for yaml_file_key, yaml_file_value in current_yaml_file_value.items():
                print('yaml_file_key:', yaml_file_key)
                if yaml_path_key in str(yaml_file_key).lower():
                    print('Found key:', yaml_path_key)
                    current_yaml_file_value = yaml_file_value
                    print('current_yaml_file_value:', current_yaml_file_value)
        else:
            for yaml_file_key, yaml_file_value in yaml_file.items():
                print('yaml_file_key:', yaml_file_key)
                if yaml_path_key in str(yaml_file_key).lower():
                    print('Found first key:', yaml_path_key)
                    current_yaml_file_value = yaml_file_value
                    print('current_yaml_file_value:', current_yaml_file_value)
#        for yaml_file_key, yaml_file_value in yaml_file.items():
#            print('yaml_file_key:', yaml_file_key)
#            if yaml_key in str(yaml_file_key).lower():
#                print('Found yaml_key:', yaml_key)
#                print('yaml_file_value:', yaml_file_value)
            #deployment_order_group = yaml_value.get(["labels"]["deployment-order-group"])
            #if deployment_order_group:
                #print('deployment_order_group:', deployment_order_group)
                #print('yaml path:', file_yaml["metadata"]["labels"]["deployment-order-group"])
